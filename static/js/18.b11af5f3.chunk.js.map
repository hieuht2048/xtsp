{"version":3,"sources":["containers/Categories/Labels/SamHanQuoc.js"],"names":["SamHanQuoc","getPosts","_callee","_this$props","C_Users_hieuh_Desktop_Projects_xtsp_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","props","resetPosts","label","stop","handleSelectPost","selectedPost","selectPost","id","this","_this2","_this$props2","posts","match","home","history","data","waiting","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","_components_commons_Loading__WEBPACK_IMPORTED_MODULE_21__","size","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","react_helmet__WEBPACK_IMPORTED_MODULE_12__","name","content","property","window","location","href","ogImg","fb_app_id","rel","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","path","concat","url","component","Detail","render","_Home_PostsList__WEBPACK_IMPORTED_MODULE_18__","Object","assign","onHandleSelectPost","NotFound","container","_Detail_LatestPosts__WEBPACK_IMPORTED_MODULE_27__","_Detail_SamePosts__WEBPACK_IMPORTED_MODULE_28__","Component","defaultProps","mapStateToProps","createStructuredSelector","makeSelectPosts","makeSelectSelectedPost","mapDispatchToProps","withConnect","connect","withReducer","injectReducer","key","reducer","withSaga","injectSaga","saga","compose"],"mappings":"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","file":"static/js/18.b11af5f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { getPosts, resetPosts } from '../actions';\r\nimport { selectPost } from '../../Detail/actions';\r\n\r\nimport PostsList from '../../Home/PostsList';\r\nimport Detail from '../../Detail';\r\nimport NotFound from '../../commons/NotFound';\r\nimport Loading from '../../../components/commons/Loading';\r\n\r\nimport injectReducer from '../../../utils/injectReducer';\r\nimport injectSaga from '../../../utils/injectSaga';\r\n\r\nimport reducer from '../reducer';\r\nimport saga from '../saga';\r\nimport { makeSelectPosts } from '../selectors';\r\nimport LatestPosts from '../../Detail/LatestPosts';\r\nimport SamePosts from '../../Detail/SamePosts';\r\nimport { makeSelectSelectedPost } from '../../Detail/selectors';\r\n\r\nimport { fb_app_id } from '../../../configs';\r\nimport ogImg from '../../../assets/images/og-img.jpg';\r\n\r\nclass SamHanQuoc extends Component {\r\n    componentDidMount() {\r\n        this.getPosts();\r\n    }\r\n\r\n    getPosts = async () => {\r\n        const { getPosts, resetPosts } = this.props;\r\n        resetPosts();\r\n        getPosts({ label: 'sam-han-quoc' });\r\n    };\r\n\r\n    handleSelectPost = selectedPost => {\r\n        const { selectPost } = this.props;\r\n        selectPost(selectedPost.id);\r\n    };\r\n\r\n    render() {\r\n        const { posts, match, home, history, selectedPost } = this.props;\r\n        let data = [];\r\n        if (posts.waiting) {\r\n            return (\r\n                <div className=\"loading-wrp\">\r\n                    <Loading size={22} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (posts.data['sam-han-quoc']) {\r\n            data = posts.data['sam-han-quoc'];\r\n            return (\r\n                <Grid className={!home ? 'list-box category' : 'list-box'}>\r\n                    {!home && (\r\n                        <Helmet>\r\n                            <title>Sâm Nhập Khẩu Chính Hãng Hàn Quốc</title>\r\n                            <meta\r\n                                name=\"description\"\r\n                                content=\"Tất cả các loại sâm nhập khẩu chính hãng từ Hàn Quốc\"\r\n                            />\r\n                            <meta\r\n                                property=\"og:url\"\r\n                                content={window.location.href}\r\n                            />\r\n                            <meta property=\"og:type\" content=\"website\" />\r\n                            <meta\r\n                                property=\"og:title\"\r\n                                content=\"www.xitashop.com | Nước Hoa Nhập Khẩu chính hãng\"\r\n                            />\r\n                            <meta property=\"og:image\" content={ogImg} />\r\n                            <meta\r\n                                property=\"og:description\"\r\n                                content=\"Các loại nước Hoa Nhập Khẩu chính hãng\"\r\n                            />\r\n                            <meta property=\"fb:app_id\" content={fb_app_id} />\r\n                            <link rel=\"canonical\" href={window.location.href} />\r\n                        </Helmet>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            !home ? 'container-left main-ct-left' : 'list'\r\n                        }\r\n                    >\r\n                        <Grid className=\"box-header\">\r\n                            <h2 className=\"\">Sâm Hàn Quốc</h2>\r\n                            {home && (\r\n                                <span className=\"view-more\">\r\n                                    <Link to=\"/sam-han-quoc/\">Xem toàn bộ</Link>\r\n                                </span>\r\n                            )}\r\n                        </Grid>\r\n                        <Switch>\r\n                            <Route\r\n                                path={`${match.url}/:id`}\r\n                                component={Detail}\r\n                            />\r\n                            <Route\r\n                                path={`${match.url}/`}\r\n                                render={props => (\r\n                                    <PostsList\r\n                                        {...props}\r\n                                        home={home}\r\n                                        posts={data}\r\n                                        onHandleSelectPost={\r\n                                            this.handleSelectPost\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                    {!home && (\r\n                        <div className=\"container-right main-ct-right\">\r\n                            <Grid container className=\"right-box\">\r\n                                <h3>Mới nhất</h3>\r\n                                <LatestPosts\r\n                                    history={history}\r\n                                    selectedPost={false}\r\n                                    onHandleSelectPost={this.handleSelectPost}\r\n                                />\r\n                            </Grid>\r\n                            {selectedPost && (\r\n                                <Grid container className=\"right-box\">\r\n                                    <h3>Sản phẩm liên quan</h3>\r\n                                    <SamePosts\r\n                                        history={history}\r\n                                        onHandleSelectPost={\r\n                                            this.handleSelectPost\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Grid>\r\n            );\r\n        } else {\r\n            return 'No data available';\r\n        }\r\n    }\r\n}\r\n\r\nSamHanQuoc.propTypes = {\r\n    posts: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired,\r\n    selectPost: PropTypes.func.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    resetPosts: PropTypes.func.isRequired,\r\n    home: PropTypes.bool,\r\n    selectedPost: PropTypes.oneOfType([PropTypes.bool, PropTypes.object])\r\n        .isRequired\r\n};\r\n\r\nSamHanQuoc.defaultProps = {\r\n    home: false\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    posts: makeSelectPosts(),\r\n    selectedPost: makeSelectSelectedPost()\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getPosts,\r\n    selectPost,\r\n    resetPosts\r\n};\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withReducer = injectReducer({ key: 'labelsReducer', reducer });\r\nconst withSaga = injectSaga({ key: 'labelsSaga', saga });\r\n\r\nexport default compose(\r\n    withReducer,\r\n    withSaga,\r\n    withConnect\r\n)(SamHanQuoc);\r\n"],"sourceRoot":""}