{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","containers/Home/saga.js","containers/Home/index.js","containers/Home/reducer.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","getHomePostsSaga","getPromotionPageSaga","getMorePostsSaga","root","_ref","payload","homePosts","postsIncludedImages","postsIncludedPrice","postsIncludedCurrency","nextPageToken","regenerator_default","a","wrap","_context","prev","next","services","getHomePosts","sent","utils","getImages","data","items","getPrice","getCurrency","all","put","type","consts","setNextPageToken","t0","error","response","stop","_marked","_ref2","promotionPage","_context2","getPage","_marked2","_ref3","morePosts","_context3","console","log","getMorePostsError","_marked3","_context4","takeLatest","_marked4","PostsList","Loadable","loader","__webpack_require__","e","then","bind","loading","modules","SamHanQuoc","Promise","LatestPosts","NuocHoa","SanPhamKhac","HomePage","handleSelectPost","selectedPost","selectPost","_this","props","id","clearSearch","_this$props","saveKeyword","setIsSearch","getPromotionPage","this","promotionPageId","_this$props2","resetHomePosts","_this2","_this$props3","match","keyword","isSearch","history","waiting","react_default","createElement","className","Loading","size","index_es","container","renderHTML","content","onClick","Switch","Route","path","concat","url","render","assign","home","posts","onHandleSelectPost","component","NotFound","Fragment","Component","defaultProps","mapStateToProps","createStructuredSelector","makeSelectHomePosts","makeSelectIsSearch","makeSelectKeyword","makeSelectPromotionPage","mapDispatchToProps","getPosts","withConnect","connect","withReducer","injectReducer","key","reducer","state","arguments","undefined","initialState","action","setIn","set","updateIn","withSaga","injectSaga","saga","compose"],"mappings":"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","file":"static/js/4.56a7cf8a.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import { put, call, all, takeLatest } from 'redux-saga/effects';\r\nimport services from '../../services/bloggerAPIs';\r\nimport * as consts from './consts';\r\nimport { setNextPageToken, getMorePostsError } from './actions';\r\nimport utils from '../../utils';\r\n\r\nfunction* getHomePostsSaga({ payload }) {\r\n    try {\r\n        const homePosts = yield call(services.getHomePosts, payload);\r\n        const postsIncludedImages = utils.getImages(homePosts.data.items);\r\n        const postsIncludedPrice = utils.getPrice(postsIncludedImages);\r\n        const postsIncludedCurrency = utils.getCurrency(postsIncludedPrice);\r\n        let nextPageToken = null;\r\n        if (homePosts.data.nextPageToken) {\r\n            nextPageToken = homePosts.data.nextPageToken;\r\n        }\r\n        yield all([\r\n            put({\r\n                type: consts.GET_HOME_POSTS_SUCCESS,\r\n                homePosts: postsIncludedCurrency\r\n            }),\r\n            put(setNextPageToken(nextPageToken))\r\n        ]);\r\n    } catch (error) {\r\n        yield put({\r\n            type: consts.GET_HOME_POSTS_ERROR,\r\n            error: error.response.data\r\n        });\r\n        yield put(setNextPageToken(null));\r\n    }\r\n}\r\n\r\nfunction* getPromotionPageSaga({ payload }) {\r\n    try {\r\n        const promotionPage = yield call(services.getPage, payload);\r\n        yield all([\r\n            put({\r\n                type: consts.GET_PROMOTION_PAGE_SUCCESS,\r\n                promotionPage: promotionPage.data\r\n            })\r\n        ]);\r\n    } catch (error) {\r\n        yield put({\r\n            type: consts.GET_PROMOTION_PAGE_ERROR,\r\n            error: error.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* getMorePostsSaga({ payload }) {\r\n    try {\r\n        const morePosts = yield call(services.getHomePosts, payload);\r\n        const postsIncludedImages = utils.getImages(morePosts.data.items);\r\n        const postsIncludedPrice = utils.getPrice(postsIncludedImages);\r\n        const postsIncludedCurrency = utils.getCurrency(postsIncludedPrice);\r\n        let nextPageToken = null;\r\n        if (morePosts.data.nextPageToken) {\r\n            nextPageToken = morePosts.data.nextPageToken;\r\n        }\r\n        yield all([\r\n            put({\r\n                type: consts.GET_MORE_POSTS_SUCCESS,\r\n                morePosts: postsIncludedCurrency\r\n            }),\r\n            put(setNextPageToken(nextPageToken))\r\n        ]);\r\n    } catch (error) {\r\n        console.log(error);\r\n        yield put(getMorePostsError(error.response.data));\r\n        yield put(setNextPageToken(null));\r\n    }\r\n}\r\n\r\nexport default function* root() {\r\n    yield takeLatest(consts.GET_HOME_POSTS_REQUEST, getHomePostsSaga);\r\n    yield takeLatest(consts.GET_MORE_POSTS_REQUEST, getMorePostsSaga);\r\n    yield takeLatest(consts.GET_PROMOTION_PAGE_REQUEST, getPromotionPageSaga);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport renderHTML from 'react-render-html';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport { Grid, ButtonBase } from '@material-ui/core';\r\nimport {\r\n    setIsSearch,\r\n    resetHomePosts,\r\n    saveKeyword,\r\n    getPromotionPage\r\n} from './actions';\r\n\r\nimport { getPosts } from '../Categories/actions';\r\nimport { selectPost } from '../Detail/actions';\r\n\r\nimport injectReducer from '../../utils/injectReducer';\r\nimport injectSaga from '../../utils/injectSaga';\r\n\r\nimport reducer from './reducer';\r\nimport saga from './saga';\r\n\r\nimport NotFound from '../commons/NotFound';\r\nimport Loading from '../../components/commons/Loading';\r\n\r\nimport {\r\n    makeSelectHomePosts,\r\n    makeSelectIsSearch,\r\n    makeSelectKeyword,\r\n    makeSelectPromotionPage\r\n} from './selectors';\r\nimport { promotionPageId } from '../../configs';\r\n\r\nconst PostsList = Loadable({\r\n    loader: () => import('./PostsList'),\r\n    loading: () => null,\r\n    modules: ['post-list']\r\n});\r\n\r\nconst SamHanQuoc = Loadable({\r\n    loader: () => import('../Categories/Labels/SamHanQuoc'),\r\n    loading: () => null,\r\n    modules: ['sam']\r\n});\r\n\r\nconst LatestPosts = Loadable({\r\n    loader: () => import('../Detail/LatestPosts'),\r\n    loading: () => null,\r\n    modules: ['latest-post']\r\n});\r\n\r\nconst NuocHoa = Loadable({\r\n    loader: () => import('../Categories/Labels/NuocHoa'),\r\n    loading: () => null,\r\n    modules: ['nuoc-hoa']\r\n});\r\n\r\nconst SanPhamKhac = Loadable({\r\n    loader: () => import('../Categories/Labels/SanPhamKhac'),\r\n    loading: () => null,\r\n    modules: ['san-pham-khac']\r\n});\r\n\r\nclass HomePage extends Component {\r\n    componentDidMount() {\r\n        const { getPromotionPage } = this.props;\r\n        getPromotionPage(promotionPageId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { setIsSearch, resetHomePosts, saveKeyword } = this.props;\r\n        resetHomePosts();\r\n        setIsSearch(false);\r\n        saveKeyword(false);\r\n    }\r\n\r\n    handleSelectPost = selectedPost => {\r\n        const { selectPost } = this.props;\r\n        selectPost(selectedPost.id);\r\n    };\r\n\r\n    clearSearch = () => {\r\n        const { saveKeyword, setIsSearch } = this.props;\r\n        saveKeyword(false);\r\n        setIsSearch(false);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            homePosts,\r\n            match,\r\n            keyword,\r\n            isSearch,\r\n            promotionPage,\r\n            history\r\n        } = this.props;\r\n\r\n        if (homePosts.waiting) {\r\n            return (\r\n                <div className=\"loading-wrp\">\r\n                    <Loading size={30} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Grid container className=\"item-container home\">\r\n                {promotionPage.waiting ? (\r\n                    <div className=\"promotion\">\r\n                        <div className=\"loading-wrp\">\r\n                            <Loading size={22} />\r\n                        </div>\r\n                    </div>\r\n                ) : promotionPage.data ? (\r\n                    <div className=\"promotion\">\r\n                        {renderHTML(promotionPage.data.content)}\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"container-left main-ct-left\">\r\n                    {isSearch && (\r\n                        <Grid className=\"search-result-info-wrp\">\r\n                            <div className=\"search-result-info\">\r\n                                {homePosts.length === 1\r\n                                    ? 'There is ' +\r\n                                      homePosts.data.length +\r\n                                      ' result'\r\n                                    : 'There are ' +\r\n                                      homePosts.data.length +\r\n                                      ' results'}{' '}\r\n                                for <span className=\"bold\">{keyword}</span>\r\n                            </div>\r\n                            <ButtonBase\r\n                                className=\"btn btn-warning search-result-action\"\r\n                                onClick={this.clearSearch}\r\n                            >\r\n                                Clear\r\n                            </ButtonBase>\r\n                        </Grid>\r\n                    )}\r\n                    {isSearch ? (\r\n                        homePosts.data ? (\r\n                            <Switch>\r\n                                <Route\r\n                                    path={`${match.url}`}\r\n                                    render={props => (\r\n                                        <Grid className=\"list-box\">\r\n                                            <Grid className=\"list\">\r\n                                                <PostsList\r\n                                                    home\r\n                                                    keyword={keyword}\r\n                                                    {...props}\r\n                                                    isSearch={isSearch}\r\n                                                    posts={homePosts.data}\r\n                                                    onHandleSelectPost={\r\n                                                        this.handleSelectPost\r\n                                                    }\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )}\r\n                                />\r\n                                <Route component={NotFound} />\r\n                            </Switch>\r\n                        ) : (\r\n                            <Grid container className=\"item-container\">\r\n                                <Grid className=\"search-result-info-wrp\">\r\n                                    <div className=\"search-result-info\">\r\n                                        There is not result for your keyword:{' '}\r\n                                        <span className=\"bold\">{keyword}</span>{' '}\r\n                                    </div>\r\n                                    <ButtonBase\r\n                                        className=\"btn btn-warning search-result-action\"\r\n                                        onClick={this.clearSearch}\r\n                                    >\r\n                                        Clear\r\n                                    </ButtonBase>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )\r\n                    ) : (\r\n                        <>\r\n                            <SamHanQuoc match={match} home history={history} />\r\n                            <NuocHoa match={match} home history={history} />\r\n                            <SanPhamKhac match={match} home history={history} />\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"container-right main-ct-right\">\r\n                    <Grid container className=\"right-box\">\r\n                        <h3>Mới nhất</h3>\r\n                        <LatestPosts\r\n                            history={history}\r\n                            selectedPost={false}\r\n                            onHandleSelectPost={this.handleSelectPost}\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nHomePage.propTypes = {\r\n    homePosts: PropTypes.object.isRequired,\r\n    selectPost: PropTypes.func.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    setIsSearch: PropTypes.func.isRequired,\r\n    isSearch: PropTypes.bool.isRequired,\r\n    keyword: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    resetHomePosts: PropTypes.func.isRequired,\r\n    saveKeyword: PropTypes.func.isRequired,\r\n    getPromotionPage: PropTypes.func.isRequired,\r\n    promotionPage: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired\r\n};\r\n\r\nHomePage.defaultProps = {\r\n    keyword: false\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    homePosts: makeSelectHomePosts(),\r\n    isSearch: makeSelectIsSearch(),\r\n    keyword: makeSelectKeyword(),\r\n    promotionPage: makeSelectPromotionPage()\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    selectPost,\r\n    setIsSearch,\r\n    resetHomePosts,\r\n    saveKeyword,\r\n    getPromotionPage,\r\n    getPosts\r\n};\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withReducer = injectReducer({ key: 'homeReducer', reducer });\r\nconst withSaga = injectSaga({ key: 'homeSaga', saga });\r\n\r\nexport default compose(\r\n    withReducer,\r\n    withSaga,\r\n    withConnect\r\n)(HomePage);\r\n","import initialState from './initialState';\r\nimport * as consts from './consts';\r\n\r\n// Handles post related actions\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case consts.GET_HOME_POSTS_REQUEST:\r\n            return state\r\n                .setIn(['homePosts', 'data'], false)\r\n                .setIn(['homePosts', 'waiting'], true)\r\n                .setIn(['homePosts', 'error'], false);\r\n        case consts.GET_HOME_POSTS_SUCCESS:\r\n            return state\r\n                .setIn(['homePosts', 'data'], action.homePosts)\r\n                .setIn(['homePosts', 'waiting'], false)\r\n                .setIn(['homePosts', 'error'], false);\r\n        case consts.GET_HOME_POSTS_ERROR:\r\n            return state\r\n                .setIn(['homePosts', 'data'], false)\r\n                .setIn(['homePosts', 'waiting'], false)\r\n                .setIn(['homePosts', 'error'], action.error);\r\n        case consts.GET_PROMOTION_PAGE_REQUEST:\r\n            return state\r\n                .setIn(['promotionPage', 'data'], false)\r\n                .setIn(['promotionPage', 'waiting'], true)\r\n                .setIn(['promotionPage', 'error'], false);\r\n        case consts.GET_PROMOTION_PAGE_SUCCESS:\r\n            return state\r\n                .setIn(['promotionPage', 'data'], action.promotionPage)\r\n                .setIn(['promotionPage', 'waiting'], false)\r\n                .setIn(['promotionPage', 'error'], false);\r\n        case consts.GET_PROMOTION_PAGE_ERROR:\r\n            return state\r\n                .setIn(['promotionPage', 'data'], false)\r\n                .setIn(['promotionPage', 'waiting'], false)\r\n                .setIn(['promotionPage', 'error'], action.error);\r\n        case consts.SET_NEXT_PAGE_TOKEN: {\r\n            return state.set('nextPageToken', action.nextPageToken);\r\n        }\r\n        case consts.GET_MORE_POSTS_REQUEST:\r\n            return state\r\n                .set('getMorePostWaiting', true)\r\n                .set('getMorePostError', false);\r\n        case consts.GET_MORE_POSTS_SUCCESS: {\r\n            return state\r\n                .set('getMorePostWaiting', false)\r\n                .set('getMorePostError', false)\r\n                .updateIn(['homePosts', 'data'], arr => [\r\n                    ...arr,\r\n                    ...action.morePosts\r\n                ]);\r\n        }\r\n        case consts.GET_MORE_POSTS_ERROR:\r\n            return state\r\n                .set('getMorePostWaiting', false)\r\n                .set('getMorePostError', action.error);\r\n        case consts.SET_IS_SEARCH:\r\n            console.log('isSearch', action.isSearch);\r\n            return state.set('isSearch', action.isSearch);\r\n        case consts.RESET_HOME_POSTS:\r\n            return state.setIn(['homePosts', 'data'], false);\r\n        case consts.SAVE_KEYWORD:\r\n            console.log('keyword', action.keyword);\r\n            return state.set('keyword', action.keyword);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"sourceRoot":""}