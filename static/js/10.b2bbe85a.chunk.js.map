{"version":3,"sources":["containers/Categories/Labels/SanPhamKhac.js","utils/checkStore.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js","utils/reducerInjectors.js","utils/injectReducer.js","containers/Detail/actions.js","components/commons/Loading.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/index.js","containers/Home/consts.js","containers/commons/NotFound.js","containers/Detail/consts.js","services/bloggerAPIs.js","containers/Home/actions.js","containers/Categories/actions.js","containers/Categories/consts.js","containers/Home/initialState.js","containers/Home/selectors.js"],"names":["SanPhamKhac","getPosts","_callee","_this$props","C_Users_hieuh_Desktop_Projects_xtsp_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","props","resetPosts","label","stop","handleSelectPost","selectedPost","selectPost","id","this","_this2","_this$props2","posts","match","home","history","data","waiting","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","className","_components_commons_Loading__WEBPACK_IMPORTED_MODULE_21__","size","react_helmet__WEBPACK_IMPORTED_MODULE_12__","name","content","property","window","location","href","ogImg","fb_app_id","rel","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","path","concat","url","component","Detail","render","_Home_PostsList__WEBPACK_IMPORTED_MODULE_18__","Object","assign","onHandleSelectPost","NotFound","container","_Detail_LatestPosts__WEBPACK_IMPORTED_MODULE_27__","_Detail_SamePosts__WEBPACK_IMPORTED_MODULE_28__","Component","defaultProps","mapStateToProps","createStructuredSelector","makeSelectPosts","makeSelectSelectedPost","mapDispatchToProps","withConnect","connect","withReducer","injectReducer","key","reducer","withSaga","injectSaga","saga","compose","__webpack_require__","d","__webpack_exports__","checkStore","lodash__WEBPACK_IMPORTED_MODULE_0__","invariant__WEBPACK_IMPORTED_MODULE_1__","invariant__WEBPACK_IMPORTED_MODULE_1___default","n","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","DAEMON","ONCE_TILL_UNMOUNT","allowedModes","checkKey","isString","isEmpty","checkDescriptor","descriptor","mode","includes","injectSagaFactory","isValid","arguments","length","undefined","args","newDescriptor","objectSpread","hasSaga","Reflect","has","task","ejectSagaFactory","cancel","_ref","WrappedComponent","InjectSaga","_React$Component","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","injectors","ejectSaga","inherits","createClass","value","react_default","React","contextType","ReactReduxContext","displayName","hoistNonReactStatics","injectReducerFactory","createReducer","ReducerInjector","getSamePosts","getLatestPosts","resetSelectedPost","_consts__WEBPACK_IMPORTED_MODULE_0__","payload","type","consts","Loading","color","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_6___default","style","fontSize","PureComponent","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","Utils","truncate","fullStr","strLen","separator","charsToShow","frontChars","Math","ceil","backChars","floor","substr","getStatusJobOpen","bid","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","accepted","return","getFirstChar","string","upperCase","toString","charAt","toUpperCase","toLowerCase","getRadomClass","avatarClassese","random","strimHTML","html","temporalDivElement","document","innerHTML","textContent","innerText","_method","_len","param","_key","Promise","resolve","apply","error","result","_len2","_key2","reject","promises","asyncToGenerator","regenerator_default","mark","all","sent","map","item","_item","e","r","_x","_ref2","_callee2","_context2","t0","_x2","Number","isInteger","toFixed","replace","timestamp","dateTime","Date","date","getMonth","getDate","getFullYear","time","getHours","getMinutes","getSeconds","suffix","join","myArr","prop","filter","obj","pos","mapObj","indexOf","cname","cvalue","exdays","setTime","getTime","expires","toUTCString","cookie","ca","split","c","substring","text","possible","b","str","el","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","email","test","String","URL","searchParams","get","params","hash","reduce","res","parts","items","parser","DOMParser","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","imgs","parseFromString","querySelectorAll","images","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","src","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","price","querySelector","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","productInfo","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","currency","search","slice","GET_HOME_POSTS_REQUEST","GET_HOME_POSTS_SUCCESS","GET_HOME_POSTS_ERROR","GET_PROMOTION_PAGE_REQUEST","GET_PROMOTION_PAGE_SUCCESS","GET_PROMOTION_PAGE_ERROR","GET_MORE_POSTS_REQUEST","GET_MORE_POSTS_SUCCESS","GET_MORE_POSTS_ERROR","SET_IS_SEARCH","RESET_HOME_POSTS","SET_NEXT_PAGE_TOKEN","SAVE_KEYWORD","GET_SAME_POSTS_REQUEST","GET_SAME_POSTS_SUCCESS","GET_SAME_POSTS_ERROR","RESET_SELECTED_POST","GET_SELECTED_POST_REQUEST","GET_SELECTED_POST_SUCCESS","GET_SELECTED_POST_ERROR","GET_LATEST_POSTS_REQUEST","GET_LATEST_POSTS_SUCCESS","GET_LATEST_POSTS_ERROR","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_configs__WEBPACK_IMPORTED_MODULE_1__","getEndpoint","blogId","apiKey","limit","instanceCreate","axios","create","getHomePosts","endpoint","limitPerPage","keyword","pageToken","getSelectedPost","getLatestPost","limitLatest","getPage","getPromotionPage","getMorePosts","getMorePostsError","resetHomePosts","setIsSearch","saveKeyword","setNextPageToken","isSearch","nextPageToken","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_ERROR","RESET_POSTS","immutable__WEBPACK_IMPORTED_MODULE_0__","fromJS","homePosts","promotionPage","getMorePostWaiting","getMorePostError","makeSelectHomePosts","makeSelectIsSearch","makeSelectKeyword","makeSelectNextPageToken","makeSelectPromotionPage","reselect__WEBPACK_IMPORTED_MODULE_0__","_initialState__WEBPACK_IMPORTED_MODULE_1__","homeSelector","state","initialState","createSelector","toJS"],"mappings":"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","file":"static/js/10.b2bbe85a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { getPosts, resetPosts } from '../actions';\r\nimport { selectPost } from '../../Detail/actions';\r\n\r\nimport PostsList from '../../Home/PostsList';\r\nimport Detail from '../../Detail';\r\nimport NotFound from '../../commons/NotFound';\r\nimport Loading from '../../../components/commons/Loading';\r\n\r\nimport injectReducer from '../../../utils/injectReducer';\r\nimport injectSaga from '../../../utils/injectSaga';\r\n\r\nimport reducer from '../reducer';\r\nimport saga from '../saga';\r\nimport { makeSelectPosts } from '../selectors';\r\nimport LatestPosts from '../../Detail/LatestPosts';\r\nimport SamePosts from '../../Detail/SamePosts';\r\nimport { makeSelectSelectedPost } from '../../Detail/selectors';\r\n\r\nimport { fb_app_id } from '../../../configs';\r\nimport ogImg from '../../../assets/images/og-img.jpg';\r\n\r\nclass SanPhamKhac extends Component {\r\n    componentDidMount() {\r\n        this.getPosts();\r\n    }\r\n\r\n    getPosts = async () => {\r\n        const { getPosts, resetPosts } = this.props;\r\n        resetPosts();\r\n        getPosts({ label: 'san-pham-khac' });\r\n    };\r\n\r\n    handleSelectPost = selectedPost => {\r\n        const { selectPost } = this.props;\r\n        selectPost(selectedPost.id);\r\n    };\r\n\r\n    render() {\r\n        const { posts, match, home, history, selectedPost } = this.props;\r\n        let data = [];\r\n        if (posts.waiting) {\r\n            return (\r\n                <Grid className=\"list-box category\">\r\n                    <div className=\"container-left main-ct-left\">\r\n                        <div className=\"loading-wrp\">\r\n                            <Loading size={22} />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            );\r\n        }\r\n\r\n        if (posts.data['san-pham-khac']) {\r\n            data = posts.data['san-pham-khac'];\r\n            return (\r\n                <Grid className={!home ? 'list-box category' : 'list-box'}>\r\n                    {!home && (\r\n                        <Helmet>\r\n                            <title>Sản phẩm nhập khẩu tổng hợp</title>\r\n                            <meta\r\n                                name=\"description\"\r\n                                content=\"Sản phẩm nhập khẩu chính hãng chất lượng cao, giá cả phải chăng\"\r\n                            />\r\n                            <meta\r\n                                property=\"og:url\"\r\n                                content={window.location.href}\r\n                            />\r\n                            <meta property=\"og:type\" content=\"website\" />\r\n                            <meta\r\n                                property=\"og:title\"\r\n                                content=\"www.xitashop.com | Nước Hoa Nhập Khẩu chính hãng\"\r\n                            />\r\n                            <meta property=\"og:image\" content={ogImg} />\r\n                            <meta\r\n                                property=\"og:description\"\r\n                                content=\"Các loại nước Hoa Nhập Khẩu chính hãng\"\r\n                            />\r\n                            <meta property=\"fb:app_id\" content={fb_app_id} />\r\n                            <link rel=\"canonical\" href={window.location.href} />\r\n                        </Helmet>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            !home ? 'container-left main-ct-left' : 'list'\r\n                        }\r\n                    >\r\n                        <Grid className=\"box-header\">\r\n                            <h2 className=\"\">Sản phẩm khác</h2>\r\n                            {home && (\r\n                                <span className=\"view-more\">\r\n                                    <Link to=\"/san-pham-khac/\">\r\n                                        Xem toàn bộ\r\n                                    </Link>\r\n                                </span>\r\n                            )}\r\n                        </Grid>\r\n                        <Switch>\r\n                            <Route\r\n                                path={`${match.url}/:id`}\r\n                                component={Detail}\r\n                            />\r\n                            <Route\r\n                                path={`${match.url}/`}\r\n                                render={props => (\r\n                                    <PostsList\r\n                                        {...props}\r\n                                        home={home}\r\n                                        posts={data}\r\n                                        onHandleSelectPost={\r\n                                            this.handleSelectPost\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                    {!home && (\r\n                        <div className=\"container-right main-ct-right\">\r\n                            <Grid container className=\"right-box\">\r\n                                <h3>Mới nhất</h3>\r\n                                <LatestPosts\r\n                                    history={history}\r\n                                    selectedPost={false}\r\n                                    onHandleSelectPost={this.handleSelectPost}\r\n                                />\r\n                            </Grid>\r\n                            {selectedPost && (\r\n                                <Grid container className=\"right-box\">\r\n                                    <h3>Sản phẩm liên quan</h3>\r\n                                    <SamePosts\r\n                                        history={history}\r\n                                        onHandleSelectPost={\r\n                                            this.handleSelectPost\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Grid>\r\n            );\r\n        } else {\r\n            return 'No data available';\r\n        }\r\n    }\r\n}\r\n\r\nSanPhamKhac.propTypes = {\r\n    posts: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired,\r\n    selectPost: PropTypes.func.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    resetPosts: PropTypes.func.isRequired,\r\n    home: PropTypes.bool,\r\n    selectedPost: PropTypes.oneOfType([PropTypes.bool, PropTypes.object])\r\n        .isRequired\r\n};\r\n\r\nSanPhamKhac.defaultProps = {\r\n    home: false\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    posts: makeSelectPosts(),\r\n    selectedPost: makeSelectSelectedPost()\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getPosts,\r\n    selectPost,\r\n    resetPosts\r\n};\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withReducer = injectReducer({ key: 'labelsReducer', reducer });\r\nconst withSaga = injectSaga({ key: 'labelsSaga', saga });\r\n\r\nexport default compose(\r\n    withReducer,\r\n    withSaga,\r\n    withConnect\r\n)(SanPhamKhac);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n    const shape = {\r\n        dispatch: isFunction,\r\n        subscribe: isFunction,\r\n        getState: isFunction,\r\n        replaceReducer: isFunction,\r\n        runSaga: isFunction,\r\n        injectedReducers: isObject,\r\n        injectedSagas: isObject,\r\n    };\r\n    invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\r\nexport const DAEMON = '@@saga-injector/daemon';\r\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\r\n\r\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\r\n\r\nconst checkKey = key => invariant(isString(key) && !isEmpty(key), '(app/utils...) injectSaga: Expected `key` to be a non empty string');\r\n\r\nconst checkDescriptor = descriptor => {\r\n    const shape = {\r\n        saga: isFunction,\r\n        mode: mode => isString(mode) && allowedModes.includes(mode),\r\n    };\r\n    invariant(conformsTo(descriptor, shape), '(app/utils...) injectSaga: Expected a valid saga descriptor');\r\n};\r\n\r\nexport function injectSagaFactory(store, isValid) {\r\n    return function injectSaga(key, descriptor = {}, args) {\r\n        if (!isValid) checkStore(store);\r\n\r\n        const newDescriptor = {\r\n            ...descriptor,\r\n            mode: descriptor.mode || DAEMON,\r\n        };\r\n        const { saga, mode } = newDescriptor;\r\n\r\n        checkKey(key);\r\n        checkDescriptor(newDescriptor);\r\n\r\n        let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const oldDescriptor = store.injectedSagas[key];\r\n            // enable hot reloading of daemon and once-till-unmount sagas\r\n            if (hasSaga && oldDescriptor.saga !== saga) {\r\n                oldDescriptor.task.cancel();\r\n                hasSaga = false;\r\n            }\r\n        }\r\n\r\n        if (!hasSaga || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)) {\r\n            /* eslint-disable no-param-reassign */\r\n            store.injectedSagas[key] = {\r\n                ...newDescriptor,\r\n                task: store.runSaga(saga, args),\r\n            };\r\n            /* eslint-enable no-param-reassign */\r\n        }\r\n    };\r\n}\r\n\r\nexport function ejectSagaFactory(store, isValid) {\r\n    return function ejectSaga(key) {\r\n        if (!isValid) checkStore(store);\r\n\r\n        checkKey(key);\r\n\r\n        if (Reflect.has(store.injectedSagas, key)) {\r\n            const descriptor = store.injectedSagas[key];\r\n            if (descriptor.mode && descriptor.mode !== DAEMON) {\r\n                descriptor.task.cancel();\r\n                // Clean up in production; in development we need `descriptor.saga` for hot reloading\r\n                if (process.env.NODE_ENV === 'production') {\r\n                    // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\r\n                    store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n    checkStore(store);\r\n\r\n    return {\r\n        injectSaga: injectSagaFactory(store, true),\r\n        ejectSaga: ejectSagaFactory(store, true),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './sagaInjectors';\r\n\r\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\r\n * on component mount and never canceled or started again. Another two options:\r\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\r\n *   cancelled with `task.cancel()` on component unmount for improved performance,\r\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\r\nexport default ({ key, saga, mode }) => WrappedComponent => {\r\n    class InjectSaga extends React.Component {\r\n        static WrappedComponent = WrappedComponent;\r\n\r\n        static contextType = ReactReduxContext;\r\n\r\n        static displayName = `withSaga(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n        constructor(props, context) {\r\n            super(props, context);\r\n\r\n            this.injectors = getInjectors(context.store);\r\n\r\n            this.injectors.injectSaga(key, { saga, mode }, this.props);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.injectors.ejectSaga(key);\r\n        }\r\n\r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return hoistNonReactStatics(InjectSaga, WrappedComponent);\r\n};\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n    return function injectReducer(key, reducer) {\r\n        if (!isValid) checkStore(store);\r\n\r\n        invariant(isString(key) && !isEmpty(key) && isFunction(reducer), '(app/utils...) injectReducer: Expected `reducer` to be a reducer function');\r\n\r\n        // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n        if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n        store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n        store.replaceReducer(createReducer(store.injectedReducers));\r\n    };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n    checkStore(store);\r\n\r\n    return {\r\n        injectReducer: injectReducerFactory(store, true),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => WrappedComponent => {\r\n    class ReducerInjector extends React.Component {\r\n        static WrappedComponent = WrappedComponent;\r\n\r\n        static contextType = ReactReduxContext;\r\n\r\n        static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n        constructor(props, context) {\r\n            super(props, context);\r\n\r\n            getInjectors(context.store).injectReducer(key, reducer);\r\n        }\r\n\r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n","import * as consts from './consts';\r\n\r\nexport const getSamePosts = payload => {\r\n    return {\r\n        type: consts.GET_SAME_POSTS_REQUEST,\r\n        payload\r\n    };\r\n};\r\n\r\nexport const getLatestPosts = () => {\r\n    return {\r\n        type: consts.GET_LATEST_POSTS_REQUEST\r\n    };\r\n};\r\n\r\nexport const selectPost = payload => {\r\n    return {\r\n        type: consts.GET_SELECTED_POST_REQUEST,\r\n        payload\r\n    };\r\n};\r\n\r\nexport const resetSelectedPost = () => ({\r\n    type: consts.RESET_SELECTED_POST\r\n});\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends PureComponent {\r\n    render() {\r\n        const { size, color } = this.props;\r\n        return (\r\n            <div className=\"component-loading\">\r\n                <CircularProgress size={size} className={color} />\r\n                <div\r\n                    className=\"loading-text blink-text\"\r\n                    style={{ fontSize: size / 1.5 }}\r\n                >\r\n                    Loading...\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLoading.propTypes = {\r\n    size: PropTypes.number,\r\n    color: PropTypes.string\r\n};\r\n\r\nLoading.defaultProps = {\r\n    size: 20,\r\n    color: 'color-darkBlue'\r\n};\r\n\r\nexport default Loading;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","class Utils {\r\n    callMethod(_method) {\r\n        return (...param) => {\r\n            return new Promise(resolve => {\r\n                _method(...param, (error, result) => {\r\n                    resolve([error, result]);\r\n                });\r\n            });\r\n        };\r\n    }\r\n\r\n    callMethodWithReject(_method) {\r\n        return (...param) => {\r\n            return new Promise((resolve, reject) => {\r\n                _method(...param, (error, result) => {\r\n                    if (error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n    }\r\n\r\n    callAllMethodWithReject(promises) {\r\n        return new Promise(async resolve => {\r\n            let result = await Promise.all(promises);\r\n            let error = null;\r\n            result = result.map(item => {\r\n                const [e, r] = item;\r\n                e && !error && (error = e);\r\n                return r;\r\n            });\r\n\r\n            if (error) {\r\n                resolve([error, null]);\r\n            } else {\r\n                resolve([null, result]);\r\n            }\r\n        });\r\n    }\r\n\r\n    callAllMethod(promises) {\r\n        return new Promise(async resolve => {\r\n            try {\r\n                const result = await Promise.all(promises);\r\n                resolve([null, result]);\r\n            } catch (error) {\r\n                resolve([error, null]);\r\n            }\r\n        });\r\n    }\r\n\r\n    truncate = (fullStr, strLen, separator) => {\r\n        if (fullStr.length <= strLen) return fullStr;\r\n        separator = separator || '...';\r\n        var sepLen = separator.length,\r\n            charsToShow = strLen - sepLen,\r\n            frontChars = Math.ceil(charsToShow / 2),\r\n            backChars = Math.floor(charsToShow / 2);\r\n\r\n        return (\r\n            fullStr.substr(0, frontChars) +\r\n            separator +\r\n            fullStr.substr(fullStr.length - backChars)\r\n        );\r\n    };\r\n\r\n    getStatusJobOpen = bid => {\r\n        for (let b of bid) {\r\n            if (b.accepted) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    currencyFormat(value) {\r\n        value = Number(value);\r\n        if (!Number.isInteger(value)) {\r\n            value = value.toFixed(2);\r\n        }\r\n        return value.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\r\n    }\r\n\r\n    convertDateTime(timestamp) {\r\n        const dateTime = new Date(timestamp);\r\n        // Create an array with the current month, day and time\r\n        const date = [\r\n            dateTime.getMonth() + 1,\r\n            dateTime.getDate(),\r\n            dateTime.getFullYear()\r\n        ];\r\n        // Create an array with the current hour, minute and second\r\n        const time = [\r\n            dateTime.getHours(),\r\n            dateTime.getMinutes(),\r\n            dateTime.getSeconds()\r\n        ];\r\n        // Determine AM or PM suffix based on the hour\r\n        const suffix = time[0] < 12 ? 'AM' : 'PM';\r\n        // Convert hour from military time\r\n        time[0] = time[0] < 12 ? time[0] : time[0] - 12;\r\n        // If hour is 0, set it to 12\r\n        time[0] = time[0] || 12;\r\n        // If seconds and minutes are less than 10, add a zero\r\n        for (let i = 1; i < 3; i++) {\r\n            if (time[i] < 10) {\r\n                time[i] = '0' + time[i];\r\n            }\r\n        }\r\n        // Return the formatted string\r\n        return date.join('/') + ' ' + time.join(':') + ' ' + suffix;\r\n    }\r\n\r\n    removeDuplicates(myArr, prop) {\r\n        return myArr.filter((obj, pos, arr) => {\r\n            return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\r\n        });\r\n    }\r\n\r\n    setCookie(cname, cvalue, exdays) {\r\n        let d = new Date();\r\n        d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n        const expires = 'expires=' + d.toUTCString();\r\n        document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\r\n    }\r\n\r\n    getCookie(cname) {\r\n        const name = cname + '=';\r\n        const ca = document.cookie.split(';');\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    makeIdString(length) {\r\n        let text = '';\r\n        const possible =\r\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < length; i++)\r\n            text += possible.charAt(\r\n                Math.floor(Math.random() * possible.length)\r\n            );\r\n        return text;\r\n    }\r\n\r\n    makeIdNumber(length) {\r\n        let text = '';\r\n        const possible = '0123456789';\r\n        for (let i = 0; i < length; i++)\r\n            text += possible.charAt(\r\n                Math.floor(Math.random() * possible.length)\r\n            );\r\n        return text;\r\n    }\r\n\r\n    toWidth(a, b) {\r\n        return a / ((a + b) / 100);\r\n    }\r\n\r\n    copyStringToClipboard(str) {\r\n        var el = document.createElement('textarea');\r\n        el.value = str;\r\n        el.setAttribute('readonly', '');\r\n        el.style = { position: 'absolute', left: '-9999px' };\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    isEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return email ? re.test(String(email).toLowerCase()) : false;\r\n    }\r\n\r\n    getURLParam(param) {\r\n        const url = new URL(window.location.href);\r\n        return url.searchParams.get(param);\r\n    }\r\n\r\n    getHashURLParam(param) {\r\n        const hash = window.location.hash.substr(1);\r\n        const params = hash.split('?')[1];\r\n        if (params && params !== '') {\r\n            const prs = params.split('&').reduce(function(res, item) {\r\n                const parts = item.split('=');\r\n                res[parts[0]] = parts[1];\r\n                return res;\r\n            }, {});\r\n            return prs[param];\r\n        }\r\n    }\r\n\r\n    convertStringToURL(str) {\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n        str = str.replace(/đ/g, 'd');\r\n        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, 'A');\r\n        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, 'E');\r\n        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, 'I');\r\n        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, 'O');\r\n        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, 'U');\r\n        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, 'Y');\r\n        str = str.replace(/Đ/g, 'D');\r\n        str = str.toLowerCase();\r\n        str = str\r\n            .replace(/[&]/g, '-and-')\r\n            .replace(/[^a-zA-Z0-9._-]/g, '-')\r\n            .replace(/[-]+/g, '-')\r\n            .replace(/-$/, '');\r\n        return str;\r\n    }\r\n    getFirstChar = (string, upperCase) => {\r\n        string.toString();\r\n        if (upperCase) {\r\n            return string.charAt(0).toUpperCase();\r\n        } else {\r\n            return string.charAt(0).toLowerCase();\r\n        }\r\n    };\r\n\r\n    getRadomClass = avatarClassese => {\r\n        return avatarClassese[\r\n            Math.floor(Math.random() * avatarClassese.length)\r\n        ];\r\n    };\r\n\r\n    strimHTML = html => {\r\n        const temporalDivElement = document.createElement('div');\r\n        temporalDivElement.innerHTML = html;\r\n        return (\r\n            temporalDivElement.textContent || temporalDivElement.innerText || ''\r\n        );\r\n    };\r\n\r\n    getImages(items) {\r\n        const parser = new DOMParser();\r\n        for (let item of items) {\r\n            const html = parser.parseFromString(item.content, 'text/html');\r\n            const imgs = html.querySelectorAll('img');\r\n            item.images = [];\r\n            for (let img of imgs) {\r\n                const src = img.src;\r\n                if (src) {\r\n                    item.images.push(src);\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    getPrice(items) {\r\n        const parser = new DOMParser();\r\n        for (let item of items) {\r\n            const html = parser.parseFromString(item.content, 'text/html');\r\n            const price = html.querySelector('.price');\r\n            if (price) {\r\n                item.price = price.innerHTML;\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    getProductInfo(items) {\r\n        const parser = new DOMParser();\r\n        for (let item of items) {\r\n            const html = parser.parseFromString(item.content, 'text/html');\r\n            const productInfo = html.querySelector('.product-info');\r\n            if (productInfo) {\r\n                item.productInfo = productInfo.innerHTML;\r\n            } else {\r\n                item.productInfo = '';\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    getCurrency(items) {\r\n        const parser = new DOMParser();\r\n        for (let item of items) {\r\n            const html = parser.parseFromString(item.content, 'text/html');\r\n            const currency = html.querySelector('.currency');\r\n            if (currency) {\r\n                item.currency = currency.innerHTML;\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    getIdFromURL(url) {\r\n        const pos = url.search('-idpx');\r\n        const ids = url.slice(pos);\r\n        return ids.slice(5, -5);\r\n    }\r\n}\r\n\r\nexport default new Utils();\r\n","export const GET_HOME_POSTS_REQUEST = 'home/GET_HOME_POSTS_REQUEST';\r\nexport const GET_HOME_POSTS_SUCCESS = 'home/GET_HOME_POSTS_SUCCESS';\r\nexport const GET_HOME_POSTS_ERROR = 'home/GET_HOME_POSTS_ERROR';\r\n\r\nexport const GET_PROMOTION_PAGE_REQUEST = 'home/GET_PROMOTION_PAGE_REQUEST';\r\nexport const GET_PROMOTION_PAGE_SUCCESS = 'home/GET_PROMOTION_PAGE_SUCCESS';\r\nexport const GET_PROMOTION_PAGE_ERROR = 'home/GET_PROMOTION_PAGE_ERROR';\r\n\r\nexport const GET_MORE_POSTS_REQUEST = 'home/GET_MORE_POSTS_REQUEST';\r\nexport const GET_MORE_POSTS_SUCCESS = 'home/GET_MORE_POSTS_SUCCESS';\r\nexport const GET_MORE_POSTS_ERROR = 'home/GET_MORE_POSTS_ERROR';\r\n\r\nexport const SET_IS_SEARCH = 'home/SET_IS_SEARCH';\r\nexport const RESET_HOME_POSTS = 'home/RESET_HOME_POSTS';\r\nexport const SET_NEXT_PAGE_TOKEN = 'home/SET_NEXT_PAGE_TOKEN';\r\nexport const SAVE_KEYWORD = 'home/SAVE_KEYWORD';\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return <div>Not found!</div>;\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","export const GET_SAME_POSTS_REQUEST = 'detail/GET_SAME_POSTS_REQUEST';\r\nexport const GET_SAME_POSTS_SUCCESS = 'detail/GET_SAME_POSTS_SUCCESS';\r\nexport const GET_SAME_POSTS_ERROR = 'detail/GET_SAME_POSTS_ERROR';\r\n\r\nexport const RESET_SELECTED_POST = 'detail/RESET_SELECTED_POST';\r\nexport const GET_SELECTED_POST_REQUEST = 'detail/GET_SELECTED_POST_REQUEST';\r\nexport const GET_SELECTED_POST_SUCCESS = 'detail/GET_SELECTED_POST_SUCCESS';\r\nexport const GET_SELECTED_POST_ERROR = 'detail/GET_SELECTED_POST_ERROR';\r\n\r\nexport const GET_LATEST_POSTS_REQUEST = 'detail/GET_LATEST_POSTS_REQUEST';\r\nexport const GET_LATEST_POSTS_SUCCESS = 'detail/GET_LATEST_POSTS_SUCCESS';\r\nexport const GET_LATEST_POSTS_ERROR = 'detail/GET_LATEST_POSTS_ERROR';\r\n","import axios from 'axios';\r\n\r\nimport { limitPerPage, apiKey, blogId, limitLatest } from '../configs';\r\n\r\nconst getEndpoint = payload => {\r\n    return `https://www.googleapis.com/blogger/v3/blogs/${blogId}/posts?labels=${\r\n        payload.label\r\n    }&key=${apiKey}${payload.limit ? '&maxResults=' + payload.limit : ''}`;\r\n};\r\n\r\nfunction instanceCreate() {\r\n    return axios.create({});\r\n}\r\n\r\nfunction getPosts(payload) {\r\n    const endpoint = getEndpoint(payload, null);\r\n    const apiInstance = instanceCreate();\r\n    return apiInstance.get(endpoint);\r\n}\r\n\r\nfunction getSelectedPost(payload) {\r\n    const endpoint = `https://www.googleapis.com/blogger/v3/blogs/${blogId}/posts/${payload}?key=${apiKey}`;\r\n    const apiInstance = instanceCreate();\r\n    return apiInstance.get(endpoint);\r\n}\r\n\r\nfunction getPage(payload) {\r\n    const endpoint = `https://www.googleapis.com/blogger/v3/blogs/${blogId}/pages/${payload}?key=${apiKey}`;\r\n    const apiInstance = instanceCreate();\r\n    return apiInstance.get(endpoint);\r\n}\r\n\r\nfunction getHomePosts(payload) {\r\n    let endpoint = `https://www.googleapis.com/blogger/v3/blogs/${blogId}/posts?key=${apiKey}&maxResults=${limitPerPage}`;\r\n    if (payload) {\r\n        endpoint = `https://www.googleapis.com/blogger/v3/blogs/${blogId}/${\r\n            payload.keyword\r\n                ? 'posts/search?q=' + payload.keyword + '&'\r\n                : 'posts?'\r\n        }key=${apiKey}&maxResults=${limitPerPage}${\r\n            payload.pageToken ? '&pageToken=' + payload.pageToken : ''\r\n        }`;\r\n    }\r\n    const apiInstance = instanceCreate();\r\n    return apiInstance.get(endpoint);\r\n}\r\n\r\nfunction getLatestPost() {\r\n    const endpoint = `https://www.googleapis.com/blogger/v3/blogs/${blogId}/posts?maxResults=${limitLatest}&orderBy=published&key=${apiKey}`;\r\n    const apiInstance = instanceCreate();\r\n    return apiInstance.get(endpoint);\r\n}\r\n\r\nexport default {\r\n    getHomePosts,\r\n    getPosts,\r\n    getSelectedPost,\r\n    getLatestPost,\r\n    getPage\r\n};\r\n","import * as consts from './consts';\r\n\r\nexport const getPromotionPage = payload => ({\r\n    type: consts.GET_PROMOTION_PAGE_REQUEST,\r\n    payload\r\n});\r\n\r\nexport const getHomePosts = payload => ({\r\n    type: consts.GET_HOME_POSTS_REQUEST,\r\n    payload\r\n});\r\n\r\nexport const getMorePosts = payload => ({\r\n    type: consts.GET_MORE_POSTS_REQUEST,\r\n    payload\r\n});\r\n\r\nexport const getMorePostsError = error => ({\r\n    type: consts.GET_MORE_POSTS_ERROR,\r\n    error\r\n});\r\n\r\nexport const resetHomePosts = () => ({\r\n    type: consts.RESET_HOME_POSTS\r\n});\r\n\r\nexport const setIsSearch = isSearch => ({\r\n    type: consts.SET_IS_SEARCH,\r\n    isSearch\r\n});\r\n\r\nexport const saveKeyword = keyword => ({\r\n    type: consts.SAVE_KEYWORD,\r\n    keyword\r\n});\r\n\r\nexport const setNextPageToken = nextPageToken => ({\r\n    type: consts.SET_NEXT_PAGE_TOKEN,\r\n    nextPageToken\r\n});\r\n","import * as consts from './consts';\r\n\r\nexport const getPosts = payload => ({\r\n    type: consts.GET_POSTS_REQUEST,\r\n    payload\r\n});\r\n\r\nexport const resetPosts = () => ({\r\n    type: consts.RESET_POSTS\r\n});\r\n","export const GET_POSTS_REQUEST = 'labels/GET_POSTS_REQUEST';\r\nexport const GET_POSTS_SUCCESS = 'labels/GET_POSTS_SUCCESS';\r\nexport const GET_POSTS_ERROR = 'labels/GET_POSTS_ERROR';\r\nexport const RESET_POSTS = 'labels/RESET_POSTS';\r\n","import { fromJS } from 'immutable';\r\n\r\nexport default fromJS({\r\n    homePosts: {\r\n        waiting: false,\r\n        error: false,\r\n        data: false\r\n    },\r\n    promotionPage: {\r\n        waiting: false,\r\n        error: false,\r\n        data: false\r\n    },\r\n    getMorePostWaiting: false,\r\n    getMorePostError: false,\r\n    nextPageToken: null,\r\n    isSearch: false,\r\n    keyword: false\r\n});\r\n","import { createSelector } from 'reselect';\r\nimport initialState from './initialState';\r\n\r\nconst homeSelector = state => state.get('homeReducer', initialState);\r\n\r\nconst makeSelectHomePosts = () =>\r\n    createSelector(\r\n        homeSelector,\r\n        state => state.get('homePosts').toJS()\r\n    );\r\n\r\nconst makeSelectIsSearch = () =>\r\n    createSelector(\r\n        homeSelector,\r\n        state => state.get('isSearch')\r\n    );\r\n\r\nconst makeSelectKeyword = () =>\r\n    createSelector(\r\n        homeSelector,\r\n        state => state.get('keyword')\r\n    );\r\n\r\nconst makeSelectNextPageToken = () =>\r\n    createSelector(\r\n        homeSelector,\r\n        state => state.get('nextPageToken')\r\n    );\r\n\r\nconst makeSelectPromotionPage = () =>\r\n    createSelector(\r\n        homeSelector,\r\n        state => state.get('promotionPage').toJS()\r\n    );\r\n\r\nexport {\r\n    makeSelectHomePosts,\r\n    makeSelectIsSearch,\r\n    makeSelectKeyword,\r\n    makeSelectNextPageToken,\r\n    makeSelectPromotionPage\r\n};\r\n"],"sourceRoot":""}